
parameters:
- name: BUILD_CONFIGURATION
  default: 'Release'
  type: string
- name: netCoreVersion
  type: string
  default: '5.0.x'
- name: publishProject
  type: string
- name: prebuildSteps
  type: stepList
  default: []
- name: execute_sonar
  type: boolean
  default: false
- name: sonar_endpoint_name
  type: string
- name: sonar_project_key
  type: string

# TODO - Add test steps (even though there may only be one test)
steps:
  - task: gitversion/setup@0
    displayName: Setup GitVersion on Agent
    inputs:
      versionSpec: '5.x'
  - task: gitversion/execute@0
    displayName: Execute GitVersion to update build number

  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: ${{ parameters.netCoreVersion }}
  - ${{ if eq(parameters.execute_sonar, true) }}:
    # Prepare Analysis Configuration task
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: ${{ parameters.sonar_endpoint_name }}
        scannerMode: 'MSBuild'
        projectKey: ${{ parameters.sonar_project_key }}

    # Run Code Analysis task
    - task: SonarQubeAnalyze@5

  - ${{ parameters.prebuildSteps }}

  - task: DotNetCoreCLI@2
    displayName: 'DotNet restore packages (dotnet restore)'
    inputs:
      command: 'restore'
      feedsToUse: config
      nugetConfigPath: "$(Build.SourcesDirectory)/nuget.config"
      projects: "**/*.csproj"
      externalFeedCredentials: 'SpydersoftDevelop'

  - task: DotNetCoreCLI@2
    displayName: Publish (dotnet publish)
    inputs:
      command: publish
      projects: ${{ parameters.publishProject }}
      arguments: '--no-restore --configuration ${{ parameters.BUILD_CONFIGURATION }} --output $(Build.ArtifactStagingDirectory) /p:InformationalVersion=$(fullSemVer) /p:AssemblyVersion=$(AssemblySemVer) /p:AssemblyFileVersion=$(AssemblySemFileVer)'
      zipAfterPublish: True

  - ${{ if eq(parameters.execute_sonar, true) }}:
    # Publish Quality Gate Result task
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
