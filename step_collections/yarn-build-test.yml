parameters:
- name: 'artifactName'
  default: ''
  type: string
- name: 'runTests'
  default: true
  type: boolean
- name: 'unitTestFile'
  default: 'output/test/junit.xml'
  type: string
- name: 'codeCoverageFile'
  default: 'output/coverage/jest/cobertura-coverage.xml'
  type: string
- name: 'workingDir'
  default: '$(Build.SourcesDirectory)'
  type: string
- name: 'zipBuildArtifacts'
  type: boolean
  default: true
- name: preBuildSteps
  default: []
  type: stepList
- name: postBuildSteps
  default: []
  type: stepList
- name: additionalSteps
  default: []
  type: stepList
- name: 'nodeVersion'
  type: string
  default: ''

steps:
- checkout: self
  fetchDepth: 0
  clean: true
- task: gitversion/setup@0
  displayName: Setup GitVersion on Agent
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Execute GitVersion to update build number

- ${{ parameters.preBuildSteps }}

- task: NodeTool@0
  displayName: Set Node Version Explicitly
  condition: ne('${{ parameters.nodeVersion }}', '')
  inputs:
    versionSource: 'spec'
    versionSpec: '${{ parameters.nodeVersion }}' # 16.19.0, 18.14.1, etc

- task: geeklearningio.gl-vsts-tasks-yarn-dev.yarn-installer-task.YarnInstaller@3
  displayName: Install Yarn
  inputs:
    checkLatest: true
    includePrerelease: false

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
  displayName: Yarn install
  inputs:
    projectDirectory: '${{ parameters.workingDir }}'
    arguments: install

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
  displayName: Set Version
  inputs:
    arguments: version --new-version $(fullSemVer) --no-git-tag-version
    projectDirectory: '${{ parameters.workingDir }}'

- ${{ if eq(parameters.runTests, true) }}:
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
    displayName: Run CI Unit Tests (test-ci)
    inputs:
      arguments: test-ci
      projectDirectory: '${{ parameters.workingDir }}'

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '${{ parameters.unitTestFile }}'
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage Results
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '${{ parameters.codeCoverageFile }}'

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
  displayName: Build 
  inputs:
    arguments: build
    projectDirectory: '${{ parameters.workingDir }}'

- ${{ parameters.postBuildSteps }}

- ${{ if eq(parameters.zipBuildArtifacts, true) }}:
  - task: ArchiveFiles@2
    displayName: 'Archive Build'
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.artifactName }}.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.artifactName }}.zip'
      ArtifactName: '${{ parameters.artifactName }}'
      publishLocation: 'Container'

- ${{ parameters.additionalSteps }}
