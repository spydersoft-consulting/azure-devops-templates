parameters:
  - name: BUILD_CONFIGURATION
    default: "Release"
    type: string
  - name: netCoreVersion
    type: string
    default: "5.0.x"
  - name: npmInstallFolder
    type: string
  - name: gulpFolder
    type: string
  - name: publishProject
    type: string

steps:
  - task: gitversion/setup@0
    displayName: Setup GitVersion on Agent
    inputs:
      versionSpec: "5.x"
  - task: gitversion/execute@0
    displayName: Execute GitVersion to update build number

  - task: UseDotNet@2
    displayName: "Use .NET Core sdk"
    inputs:
      packageType: sdk
      version: ${{ parameters.netCoreVersion }}

  - task: Npm@1
    displayName: NPM Install
    inputs:
      workingDir: ${{ parameters.npmInstallFolder }}
      command: install

  - task: CmdLine@2
    inputs:
      script: "npm install gulp"
      workingDirectory: ${{ parameters.gulpFolder }}

  - task: CmdLine@2
    inputs:
      script: "gulp build:dist"
      workingDirectory: ${{ parameters.gulpFolder }}

  - task: DotNetCoreCLI@2
    displayName: "DotNet restore packages (dotnet restore)"
    inputs:
      command: "restore"
      feedsToUse: config
      nugetConfigPath: "$(Build.SourcesDirectory)/nuget.config"
      projects: "**/*.csproj"
      externalFeedCredentials: "SpydersoftDevelop"

  - task: DotNetCoreCLI@2
    displayName: Publish (dotnet publish)
    inputs:
      command: publish
      projects: ${{ parameters.publishProject }}
      arguments: "--no-restore --configuration ${{ parameters.BUILD_CONFIGURATION }} --output $(Build.ArtifactStagingDirectory) /p:InformationalVersion=$(fullSemVer)"
      zipAfterPublish: True
