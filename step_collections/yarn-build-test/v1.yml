parameters:
  - name: "artifactName"
    default: ""
    type: string
  - name: "runTests"
    default: true
    type: boolean
  - name: "unitTestFile"
    default: "output/test/junit.xml"
    type: string
  - name: "codeCoverageFile"
    default: "output/coverage/cobertura-coverage.xml"
    type: string
  - name: "workingDir"
    default: "$(Build.SourcesDirectory)"
    type: string
  - name: "zipBuildArtifacts"
    type: boolean
    default: true
  - name: preBuildSteps
    default: []
    type: stepList
  - name: postBuildSteps
    default: []
    type: stepList
  - name: additionalSteps
    default: []
    type: stepList
  - name: "nodeVersion"
    type: string
    default: ""
  - name: useYarn2
    type: boolean
    default: false

  - name: executeSonar
    type: boolean
    default: false
  - name: sonarEndpointName
    type: string
    default: ""
  - name: useSonarCloud
    type: boolean
    default: false
  - name: sonarCloudOrganization
    type: string
    default: ""
  - name: sonar_config_file
    type: string
    default: "sonar-project.properties"

steps:
  - ${{ parameters.preBuildSteps }}

  - task: NodeTool@0
    displayName: Set Node Version Explicitly
    condition: ne('${{ parameters.nodeVersion }}', '')
    inputs:
      versionSource: "spec"
      versionSpec: "${{ parameters.nodeVersion }}" # 16.19.0, 18.14.1, etc

  - ${{ if eq(parameters.executeSonar, true) }}:
      - ${{ if eq(parameters.useSonarCloud, true) }}:
          # Prepare Analysis Configuration task
          - task: SonarCloudPrepare@3
            inputs:
              SonarCloud: ${{ parameters.sonarEndpointName }}
              organization: ${{ parameters.sonarCloudOrganization }}
              scannerMode: "CLI"
              configMode: "file"
              configFile: ${{ parameters.sonar_config_file }}
      - ${{ else }}:
          # Prepare Analysis Configuration task
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: ${{ parameters.sonarEndpointName }}
              scannerMode: "CLI"
              configMode: "file"
              configFile: ${{ parameters.sonar_config_file }}

  - pwsh: |
      cd ${{ parameters.workingDir }}
      yarn install
    displayName: Yarn install

  - ${{ if eq(parameters.useYarn2, true) }}:
      - pwsh: |
          cd ${{ parameters.workingDir }}
          $packageJson = Get-Content -Raw -Path package.json | ConvertFrom-Json
          $packageJson.version = "$(fullSemVer)"
          $packageJson | ConvertTo-Json -Depth 100 | Set-Content -Path package.json
        displayName: Set Version (Yarn 2)
  - ${{ if eq(parameters.useYarn2, false) }}:
      - pwsh: |
          cd ${{ parameters.workingDir }}
          yarn version --new-version "$(fullSemVer)" --no-git-tag-version
        displayName: Set Version

  - ${{ if eq(parameters.runTests, true) }}:
      - pwsh: |
          cd ${{ parameters.workingDir }}
          yarn test-ci
        displayName: Run CI Unit Tests (test-ci)

      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "${{ parameters.unitTestFile }}"
          failTaskOnFailedTests: true

      - task: PublishCodeCoverageResults@2
        displayName: Publish Code Coverage Results
        inputs:
          summaryFileLocation: "${{ parameters.codeCoverageFile }}"

      - ${{ if eq(parameters.executeSonar, true) }}:
          - ${{ if eq(parameters.useSonarCloud, true) }}:
              # Run Code Analysis task
              - task: SonarCloudAnalyze@3

              # Publish Quality Gate Result task
              - task: SonarCloudPublish@3
                inputs:
                  pollingTimeoutSec: "300"
          - ${{ else }}:
              # Run Code Analysis task
              - task: SonarQubeAnalyze@5

              # Publish Quality Gate Result task
              - task: SonarQubePublish@5
                inputs:
                  pollingTimeoutSec: "300"

  - pwsh: |
      cd ${{ parameters.workingDir }}
      yarn build
    displayName: Build

  - ${{ parameters.postBuildSteps }}

  - ${{ parameters.additionalSteps }}
